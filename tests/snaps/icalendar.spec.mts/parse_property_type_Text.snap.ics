BEGIN:VCALENDAR
BEGIN:VEVENT
DESCRIPTION:Here is a new Class:

<?php

/**
 * This is iCalP
 arse
 *
 * @category Parser
 * @author   Timo Henke <phpstuf
 f@thenke.de>
 * @license  http://www.opensource.org/licenses
 /mit-license.php  MIT License
 */

	class iCalParse
	{
		con
 st VERSION = "1.0";

		public function doParse( $data )
		{

 			$lines = preg_split('/\r?\n/',$data,-1, PREG_SPLIT_NO_EMP
 TY);
    		if( preg_match('/^BEGIN:VCALENDAR/i',$lines[0]) &
 & preg_match('/^END:VCALENDAR/i',$lines[sizeof($lines)-1]) )
 
    		{
				$res = array();
				$addTo = array();
				$addT
 oElement = '';
				foreach ($lines as $line)
				{
					if( 
 preg_match('/^(BEGIN|END):(VTODO|VEVENT|VCALENDAR|DAYLIGHT|V
 TIMEZONE|STANDARD)/s',$line,$m) )
					{
						switch( $m[1]
  )
						{
							case 'BEGIN' :
								$addTo[] = trim( (s
 izeof($addTo) > 0 ? $addTo[sizeof($addTo)-1] : '') . '/' . $
 m[2],'/');
								break;
							case 'END' :
								array_
 pop($addTo);
								break;
						}
						if( sizeof($addTo)
  > 0 )
						{
							$addToElement = $addTo[sizeof($addTo)-
 1];
						}
					}
					else
					{
						if( substr($line,0
 ,1) != ' ' )
						{
			                list($lastkey,$value
 ) = $this->splitKeyValue($line);
							$this->arrayPathSet(
 $res,$addToElement.'/'.$lastkey,$value);

						}
						else
 
						{
							$this->arrayPathSet($res,$addToElement.'/'.$
 lastkey,$this->arrayPathGet($res,$addToElement.'/'.$lastkey)
  . substr($line,1));
						}
					}
				}
   			}
   			retu
 rn $res;
		}

		function arrayPathSet(&$a, $path, $value)
		
 {
			$p = explode('/',$path);
			$key = array_shift($p);
			
 if (empty($p))
			{
				$a[$key] = $value;
			}
			else
			{
 
				if (!isset($a[$key]) || !is_array($a[$key]))
				{
				
 	$a[$key] = array();
				}
				$this->arrayPathSet($a[$key],
  implode('/',$p), $value);
			}
		}

		function arrayPathGet
 ($data, $path)
		{
			$found = true;
			$path = explode("/",
  trim($path,'/'));
			$r = count($path);
			for( $x = 0; ($x
  < $r && $found); $x++ )
			{
				$key = $path[$x];
				if (
 isset($data[$key]))
				{
					$data = $data[$key];
				}
		
 		else
				{
					$found = false;
				}
			}
			return $foun
 d ? $data : false;
		}

		public function splitKeyValue( $ro
 w )
		{
			preg_match("/([^:]+)[:]([\w\W]*)/", $row, $matche
 s);
			return (sizeof($matches) == 0) ? false : array_splice
 ($matches, 1, 2);
		}

	}

END:VEVENT
END:VCALENDAR
